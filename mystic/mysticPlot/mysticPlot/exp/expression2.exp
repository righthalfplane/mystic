{
     /*  test with 400x400 image 's'  */

        equal_expression=s;

        window("IDENTIFIER",sizeof(s));

        logical_or_expression=equal_expression;
        logical_and_expression=equal_expression;
        bitwise_or_expression=equal_expression;
        bitwise_xor_expression=equal_expression;
        bitwise_and_expression=equal_expression;
        eqnoteq_expressions = equal_expression;
        lessgreat_expression = equal_expression;
        shift_expression=equal_expression;
        plusminus_expression=equal_expression;
        multdivmod_expression= equal_expression;
        unary_expression=equal_expression;
        expression=equal_expression;
        IDENTIFIER = equal_expression;
        IDENTIFIER += equal_expression;
        IDENTIFIER -= equal_expression;
        IDENTIFIER /= equal_expression;
        IDENTIFIER *= equal_expression;
        IDENTIFIER %= equal_expression;
        IDENTIFIER ^= equal_expression;
        IDENTIFIER &= equal_expression;
        IDENTIFIER <<= equal_expression;
        IDENTIFIER >>= equal_expression;
        IDENTIFIER =logical_or_expression || logical_and_expression;
        IDENTIFIER =logical_and_expression && bitwise_or_expression;
        IDENTIFIER =bitwise_or_expression | bitwise_xor_expression;
        IDENTIFIER =bitwise_xor_expression ^ bitwise_and_expression;
        IDENTIFIER =bitwise_and_expression & eqnoteq_expressions;
        IDENTIFIER =eqnoteq_expressions != lessgreat_expression;
        IDENTIFIER =eqnoteq_expressions == lessgreat_expression;
        IDENTIFIER =lessgreat_expression < shift_expression;
        IDENTIFIER =lessgreat_expression > shift_expression;
        IDENTIFIER =lessgreat_expression >= shift_expression;
        IDENTIFIER =lessgreat_expression <= shift_expression;
        IDENTIFIER =shift_expression >> plusminus_expression;
        IDENTIFIER =shift_expression << plusminus_expression;
        IDENTIFIER =plusminus_expression + multdivmod_expression;
        IDENTIFIER =plusminus_expression - multdivmod_expression;
        IDENTIFIER =multdivmod_expression * unary_expression;
        IDENTIFIER =multdivmod_expression / unary_expression;
        IDENTIFIER =multdivmod_expression % unary_expression;
        IDENTIFIER = -unary_expression;
        IDENTIFIER = ~unary_expression;
        IDENTIFIER = !unary_expression;
        IDENTIFIER = sin (expression);
        IDENTIFIER = cos (expression);
        IDENTIFIER = tan (expression);
        IDENTIFIER = atan (expression);
        IDENTIFIER = asin (expression);
        IDENTIFIER = acos (expression);
        IDENTIFIER = exp (expression);
        IDENTIFIER = log (expression);
        IDENTIFIER = log10 (expression);
        IDENTIFIER = sqrt (expression);
        IDENTIFIER = fabs (expression);
        IDENTIFIER = cosh (expression);
        IDENTIFIER = sinh (expression);
        IDENTIFIER = tanh (expression);
        IDENTIFIER = floor (expression);
        IDENTIFIER = ceil (expression);
        IDENTIFIER = sqrt (expression);
        IDENTIFIER = fmod (expression,15);
        IDENTIFIER = pow (expression,4);
        IDENTIFIER = atan2 (expression,22);
        IDENTIFIER = max (expression);
        IDENTIFIER = min (expression);
        IDENTIFIER = sum (expression);
        IDENTIFIER = count (expression,0);
        IDENTIFIER = xfill (expression,0,20);
        IDENTIFIER = yfill (expression,1,20);
        t=scale(IDENTIFIER,200,200);
        d=clip(IDENTIFIER,50,200,50,200);
        IDENTIFIER = insert (IDENTIFIER,d,100,200);
}
